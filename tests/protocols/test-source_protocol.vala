/*
  Game Server Watcher
  Copyright (C) 2025  Alexander Burobin

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

using Gsw;

public static int main (string[] args) {
  Environment.set_variable ("GSW_PROTOCOLS_DIR", "../data/protocols", true);

  Test.init (ref args);

  Test.add_data_func ("/protocols/source/without_challenge", () => {
    var sinfo = create_sinfo ();
    var plist_fields = create_plist_fields ();
    var plist = create_plist ();

    new ProtocolTestRunner ("../data/protocols/source.lua")
      // query server info
      .expect_data (sinfo_request)
      .response (sinfo_response)
      // query player list
      .expect_data (plist_request)
      .response (plist_response)
      .expect_sinfo(sinfo)
      .expect_plist(plist_fields, plist)
      .run ();
  });

  Test.add_data_func ("/protocols/source/with_challenge", () => {
    var sinfo = create_sinfo ();
    var plist_fields = create_plist_fields ();
    var plist = create_plist ();

    new ProtocolTestRunner ("../data/protocols/source.lua")
      // query server info
      .expect_data (sinfo_request)
      .response (challenge_response)
      // query server info with challenge
      .expect_data (sinfo_request_with_challenge)
      .response (sinfo_response)
      // query player list
      .expect_data (plist_request)
      .response (challenge_response)
      // query player list with challenge
      .expect_data (plist_request_with_challenge)
      .response (plist_response)
      .expect_sinfo(sinfo)
      .expect_plist(plist_fields, plist)
      .run ();
  });

  Test.add_data_func ("/protocols/source/the_ship", () => {
    var sinfo = create_the_ship_sinfo ();
    var plist_fields = create_the_ship_plist_fields ();
    var plist = create_the_ship_plist ();

    new ProtocolTestRunner ("../data/protocols/source.lua")
      // query server info
      .expect_data (sinfo_request)
      .response (the_ship_sinfo_response)
      // query player list
      .expect_data (plist_request)
      .response (the_ship_plist_response)
      .expect_sinfo(sinfo)
      .expect_plist(plist_fields, plist)
      .run ();
  });

  Test.add_data_func ("/protocols/source/split_packets", () => {
    var sinfo = create_sinfo ();
    var plist_fields = create_plist_fields ();
    var plist = create_split_plist ();

    new ProtocolTestRunner ("../data/protocols/source.lua")
      // query server info
      .expect_data (sinfo_request)
      .response (sinfo_response)
      // query player list
      .expect_data (plist_request)
      .response (split_plist_response_1)
      .response (split_plist_response_2)
      .expect_sinfo(sinfo)
      .expect_plist(plist_fields, plist)
      .run ();
  });

  Test.add_data_func ("/protocols/source/invalid_format", () => {
    new ProtocolTestRunner ("../data/protocols/source.lua")
      .expect_data (sinfo_request)
      .response (challenge_response_invalid_format)
      .expect_error (new ProtocolError.INVALID_RESPONSE("invalid response: unknown packet format -3"))
      .run ();
  });

  Test.add_data_func ("/protocols/source/invalid_type", () => {
    new ProtocolTestRunner ("../data/protocols/source.lua")
      .expect_data (sinfo_request)
      .response (challenge_response_invalid_type)
      .expect_error (new ProtocolError.INVALID_RESPONSE("invalid response: unexpected response type"))
      .run ();
  });

  Test.run ();
  return 0;
}

private const uint8[] challenge_response = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0x0A, 0x08, 0x5E, 0xEA
};

private const uint8[] sinfo_request = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x54, 0x53, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x20, 0x45, 0x6E, 0x67, 0x69,
  0x6E, 0x65, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
};

private const uint8[] sinfo_request_with_challenge = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x54, 0x53, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x20, 0x45, 0x6E, 0x67, 0x69,
  0x6E, 0x65, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x00, 0x0A, 0x08, 0x5E, 0xEA
};

private const uint8[] sinfo_response = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x49, 0x02, 0x67, 0x61, 0x6D, 0x65, 0x32, 0x78, 0x73, 0x2E, 0x63, 0x6F,
  0x6D, 0x20, 0x43, 0x6F, 0x75, 0x6E, 0x74, 0x65, 0x72, 0x2D, 0x53, 0x74, 0x72, 0x69, 0x6B, 0x65,
  0x20, 0x53, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x20, 0x23, 0x31, 0x00, 0x64, 0x65, 0x5F, 0x64, 0x75,
  0x73, 0x74, 0x00, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6B, 0x65, 0x00, 0x43, 0x6F, 0x75, 0x6E, 0x74,
  0x65, 0x72, 0x2D, 0x53, 0x74, 0x72, 0x69, 0x6B, 0x65, 0x3A, 0x20, 0x53, 0x6F, 0x75, 0x72, 0x63,
  0x65, 0x00, 0xF0, 0x00, 0x05, 0x10, 0x04, 0x64, 0x6C, 0x00, 0x00, 0x31, 0x2E, 0x30, 0x2E, 0x30,
  0x2E, 0x32, 0x32, 0x00
};

private const uint8[] plist_request = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0xFF, 0xFF, 0xFF, 0xFF
};

private const uint8[] plist_request_with_challenge = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x0A, 0x08, 0x5E, 0xEA
};

private const uint8[] plist_response = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x44, 0x02, 0x01, 0x5B, 0x44, 0x5D, 0x2D, 0x2D, 0x2D, 0x2D, 0x3E, 0x54,
  0x2E, 0x4E, 0x2E, 0x57, 0x3C, 0x2D, 0x2D, 0x2D, 0x2D, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xB4, 0x97,
  0x00, 0x44, 0x02, 0x4B, 0x69, 0x6C, 0x6C, 0x65, 0x72, 0x20, 0x21, 0x21, 0x21, 0x00, 0x05, 0x00,
  0x00, 0x00, 0x69, 0x24, 0xD9, 0x43
};

private const uint8[] the_ship_sinfo_response = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x49, 0x07, 0x53, 0x68, 0x69, 0x70, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65,
  0x72, 0x00, 0x62, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x72, 0x00 ,0x73, 0x68, 0x69, 0x70, 0x00,
  0x54, 0x68, 0x65, 0x20, 0x53, 0x68, 0x69, 0x70, 0x00, 0x60, 0x09, 0x01, 0x05, 0x00, 0x6C, 0x77,
  0x00, 0x00, 0x01, 0x03, 0x03, 0x31, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x34, 0x00
};

private const uint8[] the_ship_plist_response = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x44, 0x06, 0x00, 0x53, 0x68, 0x69, 0x70, 0x6D, 0x61, 0x74, 0x65, 0x31,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x01, 0x53, 0x68, 0x69, 0x70, 0x6D, 0x61,
  0x74, 0x65, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x02, 0x53, 0x68, 0x69,
  0x70, 0x6D, 0x61, 0x74, 0x65, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x03,
  0x53, 0x68, 0x69, 0x70, 0x6D, 0x61, 0x74, 0x65, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0xBF, 0x04, 0x53, 0x68, 0x69, 0x70, 0x6D, 0x61, 0x74, 0x65, 0x35, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0xBF, 0x07, 0x28, 0x31, 0x29, 0x4C, 0x61, 0x6E, 0x64, 0x4C, 0x75, 0x62,
  0x62, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD3, 0x8E, 0x68, 0x45, 0x00, 0x00, 0x00, 0x00,
  0xC4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xC4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xC4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x09, 0x00, 0x00
};

private const uint8[] split_sinfo_response = {
  0xff, 0xff, 0xff, 0xff, 0x49, 0x11, 0x46, 0x53, 0x43, 0xf0, 0x9f, 0xa5, 0xb7, 0x20, 0x4e, 0x69,
  0x6e, 0x6a, 0x61, 0x20, 0x52, 0x50, 0x20, 0xe2, 0x86, 0x92, 0x20, 0x53, 0x31, 0x20, 0xe2, 0x80,
  0xa2, 0x20, 0x4b, 0x6f, 0x6e, 0x6f, 0x68, 0x61, 0x20, 0x7c, 0x20, 0x2e, 0x67, 0x67, 0x2f, 0x66,
  0x73, 0x63, 0x67, 0x6d, 0x6f, 0x64, 0x00, 0x72, 0x70, 0x5f, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x5f,
  0x66, 0x73, 0x63, 0x5f, 0x76, 0x5f, 0x31, 0x5f, 0x31, 0x00, 0x67, 0x61, 0x72, 0x72, 0x79, 0x73,
  0x6d, 0x6f, 0x64, 0x00, 0x4e, 0x61, 0x72, 0x75, 0x74, 0x6f, 0x52, 0x50, 0x00, 0xa0, 0x0f, 0x7f,
  0x80, 0x00, 0x64, 0x6c, 0x00, 0x01, 0x32, 0x30, 0x32, 0x34, 0x2e, 0x31, 0x30, 0x2e, 0x32, 0x39,
  0x00, 0xb1, 0x87, 0x69, 0x3e, 0x15, 0xb2, 0x00, 0x00, 0x00, 0x30, 0x01, 0x20, 0x67, 0x6d, 0x3a,
  0x64, 0x61, 0x72, 0x6b, 0x72, 0x70, 0x20, 0x6c, 0x6f, 0x63, 0x3a, 0x66, 0x72, 0x20, 0x76, 0x65,
  0x72, 0x3a, 0x32, 0x34, 0x31, 0x32, 0x30, 0x39, 0x00, 0xa0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00
};

private const uint8[] split_plist_response_1 = {
  0xfe, 0xff, 0xff, 0xff, 0x97, 0x1b, 0x00, 0x00, 0x02, 0x00, 0xe0, 0x04, 0xff, 0xff, 0xff, 0xff,
  0x44, 0x7f, 0x00, 0x6d, 0x62, 0x00, 0xff, 0xff, 0xff, 0xff, 0xe2, 0x1c, 0x19, 0x46, 0x00, 0x63,
  0x61, 0x70, 0x74, 0x61, 0x69, 0x6e, 0x20, 0x62, 0x72, 0x61, 0x73, 0x63, 0x6f, 0x00, 0x01, 0x00,
  0x00, 0x00, 0xe1, 0xf1, 0x16, 0x46, 0x00, 0x46, 0x41, 0x46, 0x4f, 0x55, 0x00, 0xf9, 0xff, 0xff,
  0xff, 0x61, 0xab, 0x14, 0x46, 0x00, 0x42, 0x61, 0x6e, 0x00, 0xfb, 0xff, 0xff, 0xff, 0xe1, 0x97,
  0x13, 0x46, 0x00, 0x52, 0x61, 0x74, 0x65, 0x6b, 0x6f, 0x73, 0x00, 0x06, 0x00, 0x00, 0x00, 0x61,
  0x70, 0x13, 0x46, 0x00, 0x66, 0x65, 0x62, 0x30, 0x78, 0x78, 0x00, 0xf6, 0xff, 0xff, 0xff, 0x21,
  0x25, 0x11, 0x46, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x50, 0x61, 0x70, 0x61, 0x4d, 0x61,
  0x67, 0x65, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x61, 0x30, 0x0a, 0x46, 0x00, 0x5b, 0x46, 0x53, 0x43,
  0x5d, 0x53, 0x63, 0x61, 0x74, 0x6f, 0x00, 0xfe, 0xff, 0xff, 0xff, 0x21, 0xf7, 0x07, 0x46, 0x00,
  0x63, 0x65, 0x6e, 0x6f, 0x7a, 0x00, 0xf6, 0xff, 0xff, 0xff, 0xc1, 0xfe, 0xfa, 0x45, 0x00, 0x53,
  0x69, 0x66, 0x53, 0x61, 0x66, 0x53, 0x6f, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x43, 0xfa,
  0x45, 0x00, 0x59, 0x6f, 0x75, 0x64, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0xfc, 0xf8, 0x45,
  0x00, 0x56, 0x61, 0x69, 0x69, 0x6e, 0x6f, 0x6d, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xc1, 0xff, 0xf1,
  0x45, 0x00, 0x65, 0x65, 0x65, 0x77, 0x61, 0x61, 0x61, 0x00, 0xfc, 0xff, 0xff, 0xff, 0x42, 0x57,
  0xd3, 0x45, 0x00, 0x50, 0x56, 0x20, 0x52, 0x45, 0x52, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41,
  0x01, 0xd2, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x53, 0x6b, 0x79, 0x46, 0x6c, 0x6f,
  0x77, 0x36, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x60, 0xd0, 0x45, 0x00, 0x54, 0x52, 0x4f,
  0x47, 0x4e, 0x4f, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xc5, 0xcc, 0x45, 0x00, 0x50, 0x65,
  0x72, 0x73, 0x73, 0x73, 0x65, 0x00, 0x04, 0x00, 0x00, 0x00, 0x41, 0x18, 0xca, 0x45, 0x00, 0x42,
  0x6f, 0x63, 0x6b, 0x53, 0x6f, 0x75, 0x68, 0x61, 0x69, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42,
  0xef, 0xc5, 0x45, 0x00, 0x5b, 0x46, 0x4f, 0x43, 0x5d, 0x20, 0x44, 0x69, 0x73, 0x50, 0x61, 0x73,
  0x57, 0x61, 0x6c, 0x61, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc2, 0x54, 0xc1, 0x45, 0x00, 0x41, 0x74,
  0x61, 0x6b, 0x61, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xad, 0xc0, 0x45, 0x00, 0x4d, 0x56,
  0x4b, 0x2d, 0x47, 0x36, 0x30, 0x34, 0x32, 0x00, 0x01, 0x00, 0x00, 0x00, 0x42, 0x31, 0xb4, 0x45,
  0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x49, 0x64, 0x77, 0x69, 0x6e, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x71, 0x9d, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x53, 0x6f, 0x72, 0x61, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0x9b, 0x45, 0x00, 0x44, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x5f,
  0x4d, 0x75, 0x73, 0x68, 0x69, 0x64, 0x6f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x3a, 0x9b, 0x45,
  0x00, 0x4c, 0x41, 0x4a, 0x55, 0x4e, 0x47, 0x4c, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x2b,
  0x8f, 0x45, 0x00, 0x4d, 0x6f, 0x62, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xee, 0x8d, 0x45,
  0x00, 0x4d, 0x75, 0x7a, 0x61, 0x6e, 0x4c, 0x61, 0x4d, 0x6f, 0x75, 0x6c, 0x61, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x81, 0xd6, 0x88, 0x45, 0x00, 0x48, 0x62, 0x65, 0x63, 0x6b, 0x73, 0x54, 0x56, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x5f, 0x86, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x73,
  0x68, 0x65, 0x65, 0x72, 0x79, 0x75, 0x5f, 0x00, 0xfb, 0xff, 0xff, 0xff, 0x00, 0x3b, 0x7e, 0x45,
  0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x4d, 0x6f, 0x79, 0x61, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x02, 0x26, 0x74, 0x45, 0x00, 0x4e, 0x61, 0x73, 0x73, 0x44, 0x61, 0x73, 0x73, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xd2, 0x6b, 0x45, 0x00, 0x4d, 0x61, 0x64, 0x73, 0x61, 0x69, 0x69, 0x69, 0x69,
  0x69, 0x00, 0xff, 0xff, 0xff, 0xff, 0x02, 0x2d, 0x5b, 0x45, 0x00, 0x4d, 0x69, 0x68, 0x61, 0x77,
  0x6b, 0x00, 0xfe, 0xff, 0xff, 0xff, 0x02, 0x67, 0x58, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d,
  0x6e, 0x61, 0x74, 0x6e, 0x61, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xcf, 0x57, 0x45, 0x00,
  0x65, 0x6c, 0x79, 0x65, 0x73, 0x62, 0x65, 0x6e, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x00,
  0xf2, 0xff, 0xff, 0xff, 0x03, 0xe2, 0x55, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x41,
  0x6d, 0x61, 0x79, 0x61, 0x74, 0x69, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x95, 0x4e, 0x45,
  0x00, 0x41, 0x6e, 0x74, 0x69, 0x73, 0x75, 0x63, 0x65, 0x75, 0x72, 0x39, 0x33, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xdc, 0x49, 0x45, 0x00, 0x44, 0x61, 0x6d, 0x73, 0x6b, 0x6f, 0x7a, 0x7a, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0xeb, 0x36, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x48,
  0x6f, 0x6d, 0x6d, 0x65, 0x20, 0x64, 0x65, 0x20, 0x70, 0x61, 0x69, 0x78, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x02, 0x05, 0x34, 0x45, 0x00, 0x6c, 0x6c, 0x75, 0x70, 0x38, 0x7a, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x02, 0xa4, 0x2b, 0x45, 0x00, 0x54, 0x6f, 0x6f, 0x72, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x61, 0x27, 0x45, 0x00, 0x41, 0x72, 0x64, 0x61, 0x36, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x24, 0x1f, 0x45, 0x00, 0x38, 0x43, 0x48, 0x4f, 0x00, 0xfb, 0xff, 0xff, 0xff, 0x02, 0x31,
  0x15, 0x45, 0x00, 0x35, 0x39, 0x27, 0x50, 0x69, 0x6e, 0x67, 0x75, 0x00, 0xfd, 0xff, 0xff, 0xff,
  0x03, 0xd8, 0x14, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x4e, 0x61, 0x72, 0x69, 0x78, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xc2, 0x10, 0x45, 0x00, 0x48, 0x6f, 0x73, 0x68, 0x69, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x02, 0xac, 0x10, 0x45, 0x00, 0x69, 0x6c, 0x79, 0x65, 0x73, 0x76, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x87, 0x10, 0x45, 0x00, 0x74, 0x69, 0x78, 0x65, 0x6c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x71, 0x10, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x43, 0x6d, 0x6f,
  0x69, 0x57, 0x65, 0x73, 0x68, 0x20, 0x7c, 0x20, 0x59, 0x6f, 0x75, 0x73, 0x73, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x51, 0x10, 0x45, 0x00, 0x4d, 0x6f, 0x63, 0x72, 0x6f, 0x00, 0xf9, 0xff, 0xff,
  0xff, 0x02, 0x25, 0x10, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x4b, 0x32, 0x53, 0x41, 0x49,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1f, 0x10, 0x45, 0x00, 0x53, 0x68, 0x69, 0x64, 0x65, 0x72,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x18, 0x10, 0x45, 0x00, 0x5b, 0x46, 0x4f, 0x43, 0x5d, 0x20,
  0x4f, 0x6e, 0x65, 0x6c, 0x79, 0x43, 0x72, 0x79, 0x42, 0x61, 0x62, 0x79, 0x79, 0x79, 0x79, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x0f, 0x45, 0x00, 0x45, 0x4c, 0x53, 0x00, 0xf6, 0xff, 0xff,
  0xff, 0x01, 0x88, 0x0f, 0x45, 0x00, 0x4c, 0x27, 0x68, 0x61, 0x64, 0x69, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x02, 0x90, 0x0d, 0x45, 0x00, 0x4d, 0x75, 0x61, 0x68, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0xfa, 0x0c, 0x45, 0x00, 0x49, 0x6d, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x02, 0xda, 0x0c, 0x45, 0x00, 0x4d, 0x61, 0x6c, 0x63, 0x6f, 0x6c, 0x6d, 0x20, 0x47,
  0x69, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xac, 0x0c, 0x45, 0x00, 0x33, 0x61, 0x74,
  0x61, 0x79, 0x20, 0x6a, 0x6d, 0x65, 0x20, 0x62, 0x72, 0x20, 0x73, 0x75, 0x72, 0x20, 0x76, 0x6f,
  0x75, 0x73, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x32, 0x0a, 0x45, 0x00, 0x5b, 0x46, 0x53, 0x43,
  0x5d, 0x20, 0x6b, 0x65, 0x6d, 0x63, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd8, 0xff, 0x44,
  0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x42, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xf0,
  0xfe, 0x44, 0x00, 0x44, 0x61, 0x69, 0x6c, 0x69, 0x5f, 0x4c, 0x61, 0x6d, 0x61, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x02, 0xf2, 0x44, 0x00, 0x49, 0x62, 0x72, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x30, 0xed, 0x44, 0x00, 0x62, 0x77, 0x61, 0x6b, 0x73, 0x69, 0x74, 0x6f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x05, 0x58, 0xe7, 0x44, 0x00, 0x41, 0x79, 0x78, 0x65, 0x6b, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x4a, 0xe7, 0x44, 0x00, 0x73, 0x69, 0x6e, 0x6e, 0x61, 0x00
};

private const uint8[] split_plist_response_2 = {
  0xfe, 0xff, 0xff, 0xff, 0x97, 0x1b, 0x00, 0x00, 0x02, 0x01, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x06, 0xdd, 0x44, 0x00, 0x42, 0x72, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x68, 0x6f, 0x20, 0x4a,
  0x72, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x5c, 0xda, 0x44, 0x00, 0x54, 0x79, 0x74, 0x79,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x70, 0xd1, 0x44, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20,
  0x53, 0x65, 0x6e, 0x20, 0x4f, 0x6b, 0x75, 0x72, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf5, 0xfb,
  0xcf, 0x44, 0x00, 0x6e, 0x61, 0x67, 0x75, 0x65, 0x74, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0xb2, 0xcc, 0x44, 0x00, 0x68, 0x61, 0x6d, 0x64, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x84,
  0xbb, 0x44, 0x00, 0x4e, 0x65, 0x6b, 0x6f, 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x4e,
  0xbb, 0x44, 0x00, 0x53, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6e, 0x39, 0x33, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x03, 0xb6, 0xb3, 0x44, 0x00, 0x4c, 0x61, 0x20, 0x56, 0x61, 0x63, 0x68,
  0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xaa, 0xa3, 0x44, 0x00, 0x44, 0x7a, 0x65, 0x75, 0x73,
  0x73, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x50, 0xa1, 0x44, 0x00, 0x6e, 0x69, 0x72, 0x65,
  0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x76, 0x9f, 0x44, 0x00, 0x53, 0x4c, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x6c, 0x9b, 0x44, 0x00, 0x6b, 0x72, 0x65, 0x69, 0x74, 0x6f, 0x78, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x3a, 0x9a, 0x44, 0x00, 0x53, 0x68, 0x69, 0x6e, 0x64, 0x61, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x6a, 0x97, 0x44, 0x00, 0x56, 0x69, 0x6e, 0x73, 0x6d, 0x6f, 0x6b,
  0x65, 0x5f, 0x39, 0x33, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x68, 0x93, 0x44, 0x00, 0x45,
  0x6d, 0x69, 0x78, 0x61, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x34, 0x91, 0x44, 0x00, 0x6d,
  0x69, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x88, 0x8c, 0x44, 0x00, 0x61, 0x61, 0x61, 0x61,
  0x61, 0x61, 0x61, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x8c, 0x44, 0x00, 0x6e, 0x61,
  0x67, 0x69, 0x73, 0x73, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x8a, 0x44, 0x00, 0x4c,
  0x52, 0x5a, 0x31, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x36, 0x89, 0x44, 0x00, 0x6d, 0x61,
  0x65, 0x6c, 0x20, 0x68, 0x65, 0x62, 0x65, 0x72, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe,
  0x83, 0x44, 0x00, 0x41, 0x6e, 0x74, 0x6f, 0x6e, 0x69, 0x6f, 0x20, 0x50, 0x61, 0x6c, 0x64, 0x69,
  0x6e, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xf4, 0x81, 0x44, 0x00, 0x36, 0x36, 0x37, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x75, 0x44, 0x00, 0x6c, 0x79, 0x61, 0x6d, 0x6c, 0x6d, 0x73,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xec, 0x73, 0x44, 0x00, 0x44, 0x72, 0x65, 0x79, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x06, 0x98, 0x72, 0x44, 0x00, 0x53, 0x68, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0xa4, 0x71, 0x44, 0x00, 0x73, 0x6e, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xbc, 0x68,
  0x44, 0x00, 0x53, 0x6c, 0x61, 0x79, 0x5a, 0x34, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xcc,
  0x5f, 0x44, 0x00, 0x43, 0x6f, 0x73, 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x70, 0x5b,
  0x44, 0x00, 0x49, 0x73, 0x6f, 0x75, 0x6b, 0x6f, 0x00, 0xfd, 0xff, 0xff, 0xff, 0x08, 0x7c, 0x51,
  0x44, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x5a, 0x65, 0x74, 0x68, 0x61, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe8, 0x4f, 0x4f, 0x44, 0x00, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x7a, 0x39, 0x33, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xbc, 0x4d, 0x44, 0x00, 0x51, 0x75, 0x69, 0x20, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x09, 0xe0, 0x3b, 0x44, 0x00, 0x53, 0x65, 0x69, 0x77, 0x79, 0x73, 0x6b, 0x69,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0f, 0x3b, 0x44, 0x00, 0x4e, 0x79, 0x77, 0x61, 0x79, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0b, 0x4c, 0x39, 0x44, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x5f,
  0x46, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x3c, 0x2c, 0x44, 0x00, 0x53, 0x68, 0x65, 0x65, 0x72, 0x75, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x90, 0x2b, 0x44, 0x00, 0x48, 0x79, 0x70, 0x33, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94,
  0xb3, 0x29, 0x44, 0x00, 0x53, 0x68, 0x61, 0x7a, 0x65, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0x58, 0x29, 0x44, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x72, 0x69, 0x63, 0x6b, 0x6f, 0x6f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xb8, 0x26, 0x44, 0x00, 0x42, 0x41, 0x53, 0x4d, 0x4f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe7, 0xa6, 0x23, 0x44, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x53,
  0x6b, 0x6f, 0x75, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x11, 0x44, 0x00, 0x49,
  0x7a, 0x61, 0x67, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xb0, 0x0c, 0x44, 0x00, 0x5b, 0x46,
  0x53, 0x43, 0x5d, 0x20, 0x34, 0x72, 0x63, 0x6b, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x98,
  0x03, 0x44, 0x00, 0x39, 0x4e, 0x45, 0x4b, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf2, 0x2f, 0x03,
  0x44, 0x00, 0x6d, 0x61, 0x72, 0x6f, 0x75, 0x61, 0x6e, 0x65, 0x5f, 0x62, 0x72, 0x64, 0x76, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xcc, 0x01, 0x44, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x4d,
  0x4d, 0x6f, 0x75, 0x6e, 0x69, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xa2, 0xff, 0x43, 0x00,
  0x73, 0x61, 0x79, 0x61, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0xff, 0x43, 0x00, 0x63,
  0x6c, 0x65, 0x6d, 0x67, 0x36, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x48, 0xe0, 0x43, 0x00,
  0x4e, 0x69, 0x68, 0x69, 0x4c, 0x20, 0x2f, 0x20, 0x4f, 0x74, 0x68, 0x6d, 0x61, 0x6e, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x13, 0x10, 0xde, 0x43, 0x00, 0x4e, 0x4f, 0x55, 0x43, 0x49, 0x54, 0x4f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x30, 0xcc, 0x43, 0x00, 0x53, 0x45, 0x4e, 0x53, 0x41, 0x54, 0x49,
  0x4f, 0x4e, 0x20, 0x50, 0x4f, 0x4c, 0x4f, 0x4e, 0x41, 0x49, 0x53, 0x45, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x13, 0x40, 0xc6, 0x43, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x5a, 0x65, 0x79, 0x64,
  0x65, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0xd7, 0x87, 0x43, 0x00, 0x48, 0x61, 0x6b, 0x69,
  0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x2f, 0x82, 0x43, 0x00, 0x41, 0x7a, 0x65, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0xad, 0x75, 0x43, 0x00, 0x4e, 0x65, 0x63, 0x74, 0x61, 0x72, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x2a, 0x40, 0x6e, 0x43, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x61, 0x73,
  0x68, 0x69, 0x6e, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0xe0, 0x46, 0x43, 0x00, 0x5b, 0x46,
  0x53, 0x43, 0x5d, 0x20, 0x53, 0x49, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x26, 0xb0, 0x35, 0x43, 0x00, 0x59, 0x61, 0x63, 0x69, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x82, 0xcf, 0x17, 0x43, 0x00, 0x5b, 0x46, 0x53, 0x43, 0x5d, 0x20, 0x54, 0x48, 0x45, 0x20,
  0x47, 0x4f, 0x41, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x0f, 0x03, 0x43, 0x00, 0x5b, 0x46,
  0x53, 0x43, 0x5d, 0x20, 0x56, 0x61, 0x6c, 0x6f, 0x72, 0x61, 0x50, 0x74, 0x69, 0x66, 0x6c, 0x6f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xdf, 0xbf, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a,
  0x7f, 0x84, 0x42
};

private const uint8[] challenge_response_invalid_format = {
  0xFD, 0xFF, 0xFF, 0xFF, 0x41, 0x0A, 0x08, 0x5E, 0xEA
};

private const uint8[] challenge_response_invalid_type = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x0A, 0x08, 0x5E, 0xEA
};

private Gee.Map<string, string> create_sinfo () {
  var sinfo = new Gee.HashMap<string, string> ();

  sinfo["protocol_version"] = "2";
  sinfo["name"] = "game2xs.com Counter-Strike Source #1";
  sinfo["map"] = "de_dust";
  sinfo["folder"] = "cstrike";
  sinfo["game"] = "Counter-Strike: Source";
  sinfo["appid"] = "240";
  sinfo["num_players"] = "5";
  sinfo["max_players"] = "16";
  sinfo["num_bots"] = "4";
  sinfo["server_type"] = "d";
  sinfo["environment"] = "l";
  sinfo["visibility"] = "0";
  sinfo["vac"] = "0";
  sinfo["version"] = "1.0.0.22";

  return sinfo;
}

private Gee.List<PlayerField> create_plist_fields () {
  var plist_fields = new Gee.ArrayList<PlayerField> ();

  plist_fields.add (new PlayerField () { title = "Name", field = "name", kind = 0 });
  plist_fields.add (new PlayerField () { title = "Score", field = "score", kind = 1 });
  plist_fields.add (new PlayerField () { title = "Time", field = "duration", kind = 2 });

  return plist_fields;
}

private Gee.List<Player> create_plist () {
  var plist = new Gee.ArrayList<Player> ();

  var player = new Player ();
  player["index"] = "1";
  player["name"] = "[D]---->T.N.W<----";
  player["score"] = "14";
  player["duration"] = "514.370361328125";
  plist.add (player);

  player = new Player ();
  player["index"] = "2";
  player["name"] = "Killer !!!";
  player["score"] = "5";
  player["duration"] = "434.28445434570312";
  plist.add (player);

  return plist;
}

private Gee.Map<string, string> create_the_ship_sinfo () {
  var sinfo = new Gee.HashMap<string, string> ();

  sinfo["protocol_version"] = "7";
  sinfo["name"] = "Ship Server";
  sinfo["map"] = "batavier";
  sinfo["folder"] = "ship";
  sinfo["game"] = "The Ship";
  sinfo["appid"] = "2400";
  sinfo["num_players"] = "1";
  sinfo["max_players"] = "5";
  sinfo["num_bots"] = "0";
  sinfo["server_type"] = "l";
  sinfo["environment"] = "w";
  sinfo["visibility"] = "0";
  sinfo["vac"] = "0";
  sinfo["version"] = "1.0.0.4";
  sinfo["the_ship_mode"] = "1";
  sinfo["the_ship_witnesses"] = "3";
  sinfo["the_ship_duration"] = "3";

  return sinfo;
}

private Gee.List<PlayerField> create_the_ship_plist_fields () {
  var plist_fields = new Gee.ArrayList<PlayerField> ();

  plist_fields.add (new PlayerField () { title = "Name", field = "name", kind = 0 });
  plist_fields.add (new PlayerField () { title = "Score", field = "score", kind = 1 });
  plist_fields.add (new PlayerField () { title = "Time", field = "duration", kind = 2 });
  plist_fields.add (new PlayerField () { title = "Deaths", field = "deaths", kind = 1 });
  plist_fields.add (new PlayerField () { title = "Money", field = "money", kind = 1 });

  return plist_fields;
}

private Gee.List<Player> create_the_ship_plist () {
  var plist = new Gee.ArrayList<Player> ();

  var player = new Player ();
  player["index"] = "0";
  player["name"] = "Shipmate1";
  player["score"] = "0";
  player["duration"] = "-1";
  player["deaths"] = "0";
  player["money"] = "2500";
  plist.add (player);

  player = new Player ();
  player["index"] = "1";
  player["name"] = "Shipmate2";
  player["score"] = "0";
  player["duration"] = "-1";
  player["deaths"] = "0";
  player["money"] = "2500";
  plist.add (player);

  player = new Player ();
  player["index"] = "2";
  player["name"] = "Shipmate3";
  player["score"] = "0";
  player["duration"] = "-1";
  player["deaths"] = "0";
  player["money"] = "2500";
  plist.add (player);

  player = new Player ();
  player["index"] = "3";
  player["name"] = "Shipmate4";
  player["score"] = "0";
  player["duration"] = "-1";
  player["deaths"] = "0";
  player["money"] = "2500";
  plist.add (player);

  player = new Player ();
  player["index"] = "4";
  player["name"] = "Shipmate5";
  player["score"] = "0";
  player["duration"] = "-1";
  player["deaths"] = "0";
  player["money"] = "2500";
  plist.add (player);

  player = new Player ();
  player["index"] = "7";
  player["name"] = "(1)LandLubber";
  player["score"] = "0";
  player["duration"] = "3720.926513671875";
  player["deaths"] = "0";
  player["money"] = "2500";
  plist.add (player);

  return plist;
}

private Gee.List<Player> create_split_plist () {
  var plist = new Gee.ArrayList<Player> ();

  var player = new Player ();
  player["index"] = "0";
  player["name"] = "mb";
  player["score"] = "-1";
  player["duration"] = "9799.220703125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "captain brasco";
  player["score"] = "1";
  player["duration"] = "9660.4697265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "FAFOU";
  player["score"] = "-7";
  player["duration"] = "9514.8447265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Ban";
  player["score"] = "-5";
  player["duration"] = "9445.9697265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Ratekos";
  player["score"] = "6";
  player["duration"] = "9436.0947265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "feb0xx";
  player["score"] = "-10";
  player["duration"] = "9289.2822265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] PapaMage";
  player["score"] = "11";
  player["duration"] = "8844.0947265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC]Scato";
  player["score"] = "-2";
  player["duration"] = "8701.7822265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "cenoz";
  player["score"] = "-10";
  player["duration"] = "8031.84423828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "SifSafSof";
  player["score"] = "0";
  player["duration"] = "8008.46923828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Youda";
  player["score"] = "0";
  player["duration"] = "7967.59423828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Vaiinom";
  player["score"] = "11";
  player["duration"] = "7743.96923828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "eeewaaa";
  player["score"] = "-4";
  player["duration"] = "6762.9072265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "PV RERE";
  player["score"] = "0";
  player["duration"] = "6720.15673828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] SkyFlow69";
  player["score"] = "0";
  player["duration"] = "6668.09423828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "TROGNON";
  player["score"] = "0";
  player["duration"] = "6552.65673828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Perssse";
  player["score"] = "4";
  player["duration"] = "6467.03173828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "BockSouhail";
  player["score"] = "0";
  player["duration"] = "6333.9072265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FOC] DisPasWala";
  player["score"] = "3";
  player["duration"] = "6186.5947265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Atakan";
  player["score"] = "0";
  player["duration"] = "6165.6572265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "MVK-G6042";
  player["score"] = "1";
  player["duration"] = "5766.1572265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC]Idwin";
  player["score"] = "2";
  player["duration"] = "5038.12548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Sora";
  player["score"] = "0";
  player["duration"] = "4977.12548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Denden_Mushido";
  player["score"] = "1";
  player["duration"] = "4967.31298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "LAJUNGLE";
  player["score"] = "0";
  player["duration"] = "4581.37548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Mobi";
  player["score"] = "0";
  player["duration"] = "4541.81201171875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "MuzanLaMoula";
  player["score"] = "1";
  player["duration"] = "4378.81298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "HbecksTV";
  player["score"] = "1";
  player["duration"] = "4299.87548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] sheeryu_";
  player["score"] = "-5";
  player["duration"] = "4067.6875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Moya";
  player["score"] = "-1";
  player["duration"] = "3906.37548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "NassDass";
  player["score"] = "0";
  player["duration"] = "3773.125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Madsaiiiii";
  player["score"] = "-1";
  player["duration"] = "3506.81298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Mihawk";
  player["score"] = "-2";
  player["duration"] = "3462.43798828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC]natnat";
  player["score"] = "0";
  player["duration"] = "3452.938232421875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "elyesbenallouda";
  player["score"] = "-14";
  player["duration"] = "3422.125732421875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Amayatis";
  player["score"] = "0";
  player["duration"] = "3305.31298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Antisuceur93";
  player["score"] = "0";
  player["duration"] = "3229.750732421875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Damskozz";
  player["score"] = "1";
  player["duration"] = "2926.68798828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Homme de paix";
  player["score"] = "2";
  player["duration"] = "2880.31298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "llup8z";
  player["score"] = "0";
  player["duration"] = "2746.25048828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Tooru";
  player["score"] = "0";
  player["duration"] = "2678.06298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Arda6z";
  player["score"] = "0";
  player["duration"] = "2546.25048828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "8CHO";
  player["score"] = "-5";
  player["duration"] = "2387.06298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "59'Pingu";
  player["score"] = "-3";
  player["duration"] = "2381.500732421875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC]Narix";
  player["score"] = "0";
  player["duration"] = "2316.125244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Hoshi";
  player["score"] = "1";
  player["duration"] = "2314.75048828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "ilyesv";
  player["score"] = "0";
  player["duration"] = "2312.43798828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "tixel";
  player["score"] = "0";
  player["duration"] = "2311.062744140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] CmoiWesh | Youss";
  player["score"] = "0";
  player["duration"] = "2309.062744140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Mocro";
  player["score"] = "-7";
  player["duration"] = "2306.31298828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC]K2SAI";
  player["score"] = "0";
  player["duration"] = "2305.93798828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Shider";
  player["score"] = "1";
  player["duration"] = "2305.500244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FOC] OnelyCryBabyyyy";
  player["score"] = "0";
  player["duration"] = "2300.000244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "ELS";
  player["score"] = "-10";
  player["duration"] = "2296.500244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "L'hadi";
  player["score"] = "0";
  player["duration"] = "2265.00048828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Muahh";
  player["score"] = "0";
  player["duration"] = "2255.62548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "ImSilver";
  player["score"] = "0";
  player["duration"] = "2253.62548828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Malcolm Gils";
  player["score"] = "0";
  player["duration"] = "2250.750732421875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "3atay jme br sur vous";
  player["score"] = "-2";
  player["duration"] = "2211.187255859375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] kemcy";
  player["score"] = "0";
  player["duration"] = "2046.7503662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] BP";
  player["score"] = "0";
  player["duration"] = "2039.50048828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Daili_Lama";
  player["score"] = "0";
  player["duration"] = "1936.0626220703125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Ibra";
  player["score"] = "0";
  player["duration"] = "1897.50048828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "bwaksito";
  player["score"] = "0";
  player["duration"] = "1850.7506103515625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Ayxek";
  player["score"] = "0";
  player["duration"] = "1850.3128662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "sinna";
  player["score"] = "0";
  player["duration"] = "1768.1876220703125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Branlinho Jr.";
  player["score"] = "0";
  player["duration"] = "1746.8753662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Tyty";
  player["score"] = "0";
  player["duration"] = "1675.5003662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Sen Okura";
  player["score"] = "0";
  player["duration"] = "1663.8736572265625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "nagueto";
  player["score"] = "0";
  player["duration"] = "1637.562744140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "hamde";
  player["score"] = "0";
  player["duration"] = "1500.1251220703125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Nekota";
  player["score"] = "0";
  player["duration"] = "1498.4378662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "SousBallon93";
  player["score"] = "-1";
  player["duration"] = "1437.6878662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "La Vache";
  player["score"] = "0";
  player["duration"] = "1309.313232421875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Dzeusss";
  player["score"] = "0";
  player["duration"] = "1290.5003662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "nirel";
  player["score"] = "0";
  player["duration"] = "1275.6876220703125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "SLD";
  player["score"] = "0";
  player["duration"] = "1243.3751220703125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "kreitox";
  player["score"] = "0";
  player["duration"] = "1233.8128662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Shinda";
  player["score"] = "0";
  player["duration"] = "1211.312744140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Vinsmoke_938";
  player["score"] = "0";
  player["duration"] = "1179.250244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Emixam";
  player["score"] = "0";
  player["duration"] = "1161.6253662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "mia";
  player["score"] = "0";
  player["duration"] = "1124.2503662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "aaaaaaaa";
  player["score"] = "0";
  player["duration"] = "1120.1253662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "nagissa";
  player["score"] = "0";
  player["duration"] = "1111.125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "LRZ11";
  player["score"] = "0";
  player["duration"] = "1097.6878662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "mael hebert";
  player["score"] = "0";
  player["duration"] = "1055.9378662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Antonio Paldini";
  player["score"] = "0";
  player["duration"] = "1039.625244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "667";
  player["score"] = "0";
  player["duration"] = "980.000244140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "lyamlms";
  player["score"] = "0";
  player["duration"] = "975.68798828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Drey";
  player["score"] = "0";
  player["duration"] = "970.3753662109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Shu";
  player["score"] = "0";
  player["duration"] = "966.56280517578125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "sno";
  player["score"] = "0";
  player["duration"] = "930.949462890625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "SlayZ4L";
  player["score"] = "0";
  player["duration"] = "895.187744140625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Costa";
  player["score"] = "0";
  player["duration"] = "877.75054931640625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Isouko";
  player["score"] = "-3";
  player["duration"] = "837.93798828125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Zetha";
  player["score"] = "0";
  player["duration"] = "829.24853515625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "aymenz93";
  player["score"] = "0";
  player["duration"] = "822.93792724609375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Qui ?";
  player["score"] = "0";
  player["duration"] = "751.50054931640625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Seiwyski";
  player["score"] = "0";
  player["duration"] = "748.24993896484375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Nyway";
  player["score"] = "0";
  player["duration"] = "741.18817138671875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] _Faaaaaaaaa";
  player["score"] = "0";
  player["duration"] = "688.93756103515625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Sheerua";
  player["score"] = "0";
  player["duration"] = "686.25018310546875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Hyp3r";
  player["score"] = "0";
  player["duration"] = "678.805908203125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Shazen";
  player["score"] = "0";
  player["duration"] = "677.37554931640625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] rickoo";
  player["score"] = "0";
  player["duration"] = "666.87542724609375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "BASMO";
  player["score"] = "0";
  player["duration"] = "654.60784912109375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Skoune";
  player["score"] = "0";
  player["duration"] = "582.4375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Izagi";
  player["score"] = "0";
  player["duration"] = "562.75042724609375";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] 4rcko";
  player["score"] = "0";
  player["duration"] = "526.3756103515625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "9NEKI";
  player["score"] = "0";
  player["duration"] = "524.7491455078125";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "marouane_brdv";
  player["score"] = "0";
  player["duration"] = "519.18756103515625";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] MMounib";
  player["score"] = "0";
  player["duration"] = "511.27267456054688";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "sayan";
  player["score"] = "0";
  player["duration"] = "510.12545776367188";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "clemg62";
  player["score"] = "0";
  player["duration"] = "448.56295776367188";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "NihiL / Othman";
  player["score"] = "0";
  player["duration"] = "444.12557983398438";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "NOUCITO";
  player["score"] = "0";
  player["duration"] = "408.37539672851562";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "SENSATION POLONAISE";
  player["score"] = "0";
  player["duration"] = "396.50057983398438";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] Zeyden";
  player["score"] = "0";
  player["duration"] = "271.68621826171875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Hakim";
  player["score"] = "0";
  player["duration"] = "260.37423706054688";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Aze";
  player["score"] = "0";
  player["duration"] = "245.67596435546875";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Nectar";
  player["score"] = "0";
  player["duration"] = "238.25064086914062";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] ashina";
  player["score"] = "0";
  player["duration"] = "198.87551879882812";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] SIUUUUUU";
  player["score"] = "0";
  player["duration"] = "181.68807983398438";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "Yacine";
  player["score"] = "0";
  player["duration"] = "151.81057739257812";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] THE GOAT";
  player["score"] = "0";
  player["duration"] = "131.06211853027344";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "[FSC] ValoraPtiflo";
  player["score"] = "0";
  player["duration"] = "95.937355041503906";
  plist.add (player);

  player = new Player ();
  player["index"] = "0";
  player["name"] = "";
  player["score"] = "0";
  player["duration"] = "66.248977661132812";
  plist.add (player);

  return plist;
}
